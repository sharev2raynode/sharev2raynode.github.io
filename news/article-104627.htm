<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <link rel="canonical" href="https://sharev2raynode.github.io/news/article-104627.htm" />
    <title>Cesium DrawCommand [1] 不谈地球 画个三角形</title>
        <meta name="description" content="目录  0. 前言  0.1. 源码中的 DrawCommand   1. 创建  1.1. 构成要素 - VertexArray 1.2. 构成要素 - ShaderProgram 1.3. 构成要" />
        <link rel="icon" href="/assets/website/img/sharev2raynode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ShareV2rayNode节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sharev2raynode.github.io/news/article-104627.htm" />
    <meta property="og:site_name" content="ShareV2rayNode节点分享站" />
    <meta property="og:title" content="Cesium DrawCommand [1] 不谈地球 画个三角形" />
    <meta property="og:image" content="https://sharev2raynode.github.io/uploads/20240417/fcc29eabab6e1a40e05e8353a7727d5b.webp" />
        <meta property="og:release_date" content="2025-04-26T07:39:21" />
    <meta property="og:updated_time" content="2025-04-26T07:39:21" />
        <meta property="og:description" content="目录  0. 前言  0.1. 源码中的 DrawCommand   1. 创建  1.1. 构成要素 - VertexArray 1.2. 构成要素 - ShaderProgram 1.3. 构成要" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Cesium DrawCommand [1] 不谈地球 画个三角形">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- BOOTSTRAP -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/bootstrap.min.css">
    <!-- OWL CAROUSEL -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/owl.theme.css">
    <!-- FONT AWESOME -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/font-awesome.min.css">
    <!-- STROKE-GAP-ICONS-WEBFONT -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/Stroke-Gap-Icons-Webfont.css">
    <!-- FONTS -->
    <link href='https://fonts.googleapis.com/css?family=Raleway:400,300,300italic,400italic,500,500italic,600,600italic,700,700italic%7COpen+Sans:400,600,700,400italic' rel='stylesheet' type='text/css'>
    <!-- MAGNIFIC POPUP CORE CSS -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/magnific/magnific-popup.css">
    <!-- REVOLUTION STYLE SHEETS -->
    <link href="/assets/website/css/sharev2raynode/revolution/settings.css" rel="stylesheet" type="text/css">
    <!-- REVOLUTION LAYERS STYLES -->
    <link href="/assets/website/css/sharev2raynode/revolution/layers.css" rel="stylesheet" type="text/css">
    <!-- REVOLUTION NAVIGATION STYLES -->
    <link href="/assets/website/css/sharev2raynode/revolution/navigation.css" rel="stylesheet" type="text/css">
    <!-- STYLESHEETS -->
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/main.css">
    <link rel="stylesheet" href="/assets/website/css/sharev2raynode/responsive.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
	<script src="/assets/website/js/frontend/sharev2raynode/html5shiv.min.js"></script>
	<script src="/assets/website/js/frontend/sharev2raynode/respond.min.js"></script>
	<![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-RZZRF0BXYJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-RZZRF0BXYJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="wrapper">
                <!-- HEADER -->
        <header id="header" class="header">
            
            <!-- NAVIGATION -->
            <nav class="navbar">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#my-navbar-collapse">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <!-- TEMPLATE LOGO -->
                        <a class="navbar-brand" href="/">
                                                <span>Share V2ray Node</span>
                                                </a>
                    </div>
                    <div class="collapse navbar-collapse" id="my-navbar-collapse">
                        <ul class="nav navbar-nav navbar-right">
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/client.htm">客户端</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
                <!-- BAR-MULTI-COLOR -->
                <div class="bar-multi-color">
                    <div class="container"></div>
                </div>
            </nav>
        </header> <!-- /.END HEADER -->
        <!-- SLIDER START HERE -->
        <!-- PAGE TITLE -->
        <div class="page-title">
            <div class="background-overlay padd-tb-150">
                <div class="container">
                    <div class="row">
                        <div class="col-md-12">
                            <h2 class="border-left-yellow padd-l-10 text-uppercase">Cesium DrawCommand [1] 不谈地球 画个三角形</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.END PAGE TITLE -->
        
        <!-- MAIN CONTENT START HERE -->
        <section class="body-content">
            <!-- ABOUT START HERE -->
            <div class="section-content">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                            <ol class="breadcrumb">
                              <li><a href="/">首页</a></li>
                              <li><a href="/news/">新闻资讯</a></li>
                              <li class="active">正文</li>
                            </ol>
                            
                            <div id="xcblog-blog-defined">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li>0. 前言 <ul> <li>0.1. 源码中的 DrawCommand</li> </ul> </li> <li>1. 创建 <ul> <li>1.1. 构成要素 - VertexArray</li> <li>1.2. 构成要素 - ShaderProgram</li> <li>1.3. 构成要素 - WebGL 的统一值</li> <li>1.4. 渲染状态对象 - RenderState</li> <li>1.5. 其它构成因子 <ul> <li>① 绘制的通道类型 - Pass</li> <li>② 绘制的图元类型 - WebGL 绘制常数</li> <li>③ 离屏绘制容器 - Framebuffer</li> <li>④ 模型坐标变换矩阵 - Matrix4</li> <li>⑤ 其它</li> </ul> </li> <li>1.6. 我们来实践一发纯色三角形</li> </ul> </li> <li>2. 意义 - 自定义 Primitive（PrimitiveLike） <ul> <li>点到为止</li> </ul> </li> <li>3. 参考资料</li> </ul> </div> <hr/> </h1> <p><code>Primitive API</code> 是公开的 API 的最底层了，它面向的场景是高性能、可自定义材质着色器（<code>Appearance API + FabricMaterial Specification</code>）、静态三维物体。</p> <p>尽管如此，<code>Primitive API</code> 仍然封装了大量几何体类、材质类、WebWorker，而且目前开放自定义着色器 API 的只有三维模型类的新架构，还没下放到<code>Primitive API</code>。</p> <p>如果 API 包袱不想那么重，又希望可以使用自己的模型格式（必须是三角面），那么私有的<code>DrawCommand + VertexArray</code> 接口就非常合适了，它的风格已经是最接近 CesiumJS WebGL 底层的一类 API 了。</p> <p><code>DrawCommand</code>，是 Cesium 封装 WebGL 的一个优秀设计，它把绘图数据（<code>VertexArray</code>）和绘图行为（<code>ShaderProgram</code>）作为一个对象，待时机合适，也就是<code>Scene</code> 执行<code>executeCommand</code> 函数时，帧状态对象上所有的指令对象就会使用 WebGL 函数执行，要什么就 bind 什么，做到了在绘图时的用法一致，上层应用接口只需生成指令对象。</p> <h2 id="01-源码中的-drawcommand">0.1. 源码中的 DrawCommand</h2> <p>譬如在<code>Primitive.js</code> 模块中的<code>createCommands</code> 函数，它就是负责把<code>Primitive</code> 对象的参数化数据或 WebWorker 计算来的数据合并生成<code>DrawCommand</code> 的地方：</p> <pre><code class="language-js">function createCommands(/* 参数省略 */) {   // ...   const length = colorCommands.length;   let vaIndex = 0;   for (let i = 0; i &lt; length; ++i) {     let colorCommand;      // ...      colorCommand = colorCommands[i];     if (!defined(colorCommand)) {       colorCommand = colorCommands[i] = new DrawCommand({         owner: primitive, // 入参，即 Primitive 对象         primitiveType: primitive._primitiveType,       });     }     colorCommand.vertexArray = primitive._va[vaIndex]; // VertexArray     colorCommand.renderState = primitive._frontFaceRS; // 渲染状态     colorCommand.shaderProgram = primitive._sp; // ShaderProgram     colorCommand.uniformMap = uniforms; // 统一值     colorCommand.pass = pass; // 该指令的通道顺序   }   // ... }</code></pre> </h1> <h2 id="11-构成要素---vertexarray">1.1. 构成要素 - VertexArray</h2> <p>Cesium 把 WebGL 的顶点缓冲和索引缓冲包装成了<code>Buffer</code>，然后为了方便，将这些顶点相关的缓冲绑定在了一个对象里，叫做<code>VertexArray</code>，内部会启用 WebGL 的<code>VAO</code> 功能。</p> <p>最快速创建<code>VertexArray</code> 的办法，就是调用其静态方法<code>VertexArray.fromGeometry()</code>，但是这需要<code>Geometry API</code> 来帮忙。</p> <p>这里想直接使用<code>Buffer</code> 来说明，那么就得先创建<code>Buffer</code>：</p> <pre><code class="language-js">const positionBuffer = Buffer.createVertexBuffer({   context: context,   sizeInBytes: 12,   usage: BufferUsage.STATIC_DRAW,   typedArray: new Float32Array([/* ... */]) }) const attributes = [   {     index: 0,     enabled: true,     vertexBuffer: positionBuffer,     componentsPerAttribute: 3,     componentDatatype: ComponentDatatype.FLOAT,     normalize: false,     offsetInBytes: 0,     strideInBytes: 0, // 紧密组合在一起，没有 byteStride     instanceDivisor: 0 // 不实例化绘制   } ]</code></pre> <p>调用<code>Buffer</code> 私有类的静态方法<code>createVertexBuffer()</code>，即可创建内置了<code>WebGLBuffer</code> 的顶点缓冲对象<code>positionBuffer</code>，然后使用普通的对象数组创建出<strong>顶点属性</strong><code>attributes</code>，每个对象就描述了一个顶点属性。接下来就可以拿这些简单的材料创建<code>VertexArray</code> 了：</p> <pre><code class="language-js">const va = new VertexArray({   context: context,   attributes: attributes })</code></pre> <p><code>Context</code> 封装了 WebGL 的各种函数调用，你可以从<code>Scene</code> 中或直接从<code>FrameState</code> 上获取到。</p> <blockquote> <p>这一步创建的<code>Buffer</code>，顶点坐标是直角坐标系下的，是最原始的坐标值，除非在着色器里做矩阵变换，或者这些直角坐标就在世界坐标系的地表附近。它是一堆没有具体语义的、纯粹数学几何的坐标，与渲染管线无关。所以，对于地表某处的坐标点，通常要配合 ENU 转换矩阵 + 内置的 MVP 转换矩阵来使用，见 1.6 的例子。</p> </blockquote> <p>这里还有一个例子，使用了两个顶点属性（VertexAttribute）：</p> <pre><code class="language-js">const positionBuffer = Buffer.createVertexBuffer({   context: context,   sizeInBytes: 12,   usage: BufferUsage.STATIC_DRAW }) const normalBuffer = Buffer.createVertexBuffer({   context: context,   sizeInBytes: 12,   usage: BufferUsage.STATIC_DRAW }) const attributes = [   {     index: 0,     vertexBuffer: positionBuffer,     componentsPerAttribute: 3,     componentDatatype: ComponentDatatype.FLOAT   },   {     index: 1,     vertexBuffer: normalBuffer,     componentsPerAttribute: 3,     componentDatatype: ComponentDatatype.FLOAT   } ] const va = new VertexArray({   context: context,   attributes: attributes })</code></pre> <p>这里把坐标缓冲和法线缓冲分开存到两个对象里了，其实 WebGL 可以用字节交错的格式，把全部顶点属性的缓冲都合并成一个的方式的，就不具体讲了，读者可以自行查阅 WebGL 中 WebGLBuffer 的用法。</p> <h2 id="12-构成要素---shaderprogram">1.2. 构成要素 - ShaderProgram</h2> <p>WebGL 的着色器也被 CesiumJS 封装了，自带缓存机制，并使用大量正则等手段做了着色器源码匹配、解析、管理。</p> <p>着色器代码由<code>ShaderSource</code> 管理，<code>ShaderProgram</code> 则管理起多个着色器源码，也就是着色器本身。使用<code>ShaderCache</code> 作为着色器程序的缓存容器。它们的层级关系如下：</p> <pre><code>Context   ┖ ShaderCache     ┖ ShaderProgram       ┖ ShaderSource</code></pre> <p>你可以自己创建<code>ShaderSource</code>、<code>ShaderProgram</code>，并通过<code>Context</code> 添加到<code>ShaderCache</code> 中。</p> <p>举例：</p> <pre><code class="language-js">new ShaderSource({   sources : [GlobeFS] })  new ShaderProgram({   gl: context._gl,   logShaderCompilation: context.logShaderCompilation,   debugShaders: context.debugShaders,   vertexShaderSource: vertexShaderSource,   vertexShaderText: vertexShaderText,   fragmentShaderSource: fragmentShaderSource,   fragmentShaderText: fragmentShaderText,   attributeLocations: attributeLocations, })</code></pre> <p>但是通常会选择更直接的方式：</p> <pre><code class="language-js">const vertexShaderText = `attribute vec3 position; void main() {   gl_Position = czm_projection * czm_modelView * vec4(position, 1.0); }` const fragmentShaderText = `uniform vec3 color; void main() {   gl_FragColor=vec4( color , 1. ); }`  const program = ShaderProgram.fromCache({   context: context,   vertexShaderSource: vertexShaderText,   fragmentShaderSource: fragmentShaderText,   attributeLocations: attributeLocations })</code></pre> <p>使用<code>ShaderProgram.fromCache</code> 静态方法会自动帮你把着色器缓存到<code>ShaderCache</code> 容器中。</p> <blockquote> <p>着色器代码可以直接使用内置的常量和自动统一值，这是默认会加上去的。</p> </blockquote> <p><code>attributeLocation</code> 是什么？它是一个很普通的 JavaScript 对象：</p> <pre><code class="language-json">{   "position": 0,   "normal": 1,   "st": 2,   "bitangent": 3,   "tangent": 4,   "color": 5 }</code></pre> <p>它指示顶点属性在着色器中的位置。</p> <h2 id="13-构成要素---webgl-的统一值">1.3. 构成要素 - WebGL 的统一值</h2> <p>这个比较简单：</p> <pre><code class="language-js">const uniforms = {   color() {     return Cesium.Color.HONEYDEW    } }</code></pre> <p>使用一个 JavaScript 对象即可，每个成员必须得是<strong>方法</strong>，返回的值符合 Uniform 的要求即可：</p> <ul> <li><code>Cesium.Matrix2/3/4</code> →<code>mat2/3/4</code></li> <li><code>Cesium.Cartesian2/3/4</code> →<code>vec2/3/4</code></li> <li><code>Cesium.Number</code> →<code>float</code></li> <li><code>Cesium.Color</code> →<code>vec4</code></li> <li><code>Cesium.Texture</code> →<code>sampler2D</code></li> <li>...</li> </ul> <p>请查阅<code>Renderer/createUniform.js</code> 中的代码，例如<code>UniformFloatVec3</code> 就可以对应<code>Color</code> 和<code>Cartesian4</code> 等等。</p> <p>这个<code>uniforms</code> 对象最终会在<code>Context</code> 执行绘制时，与系统的自动统一值（<code>AutomaticUniforms</code>）合并。</p> <pre><code class="language-js">Context.prototype.draw = function (/*...*/) {   // ...   continueDraw(this, drawCommand, shaderProgram, uniformMap);   // ... }</code></pre> <h2 id="14-渲染状态对象---renderstate">1.4. 渲染状态对象 - RenderState</h2> <p>渲染状态对象是必须传递给<code>DrawCommand</code> 的。渲染状态对象类型是<code>RenderState</code>，它与<code>ShaderProgram</code> 类似，都提供了静态方法来“缓存式”创建：</p> <pre><code class="language-js">const renderState = RenderState.fromCache({   depthTest: {     enabled: true   } })</code></pre> <p>哪怕什么都不传递：<code>RenderState.fromCache()</code>，内部也会返回一个渲染状态。</p> <p>它传递渲染数据之外一切参与 WebGL 渲染的状态值，在<code>RenderState</code> 中有详细的默认列表参考，上述代码显式指定要进行深度测试。</p> <h2 id="15-其它构成因子">1.5. 其它构成因子</h2> <p>创建绘图指令除了 1.1 ~ 1.3 成分之外，还有其它可选项。</p> <h3 id="-绘制的通道类型---pass">① 绘制的通道类型 - Pass</h3> <p>CesiumJS 不是粗暴地把帧状态对象上的 Command 遍历一遍就绘制了的，在 Scene 的渲染过程中，除了生成三大 Command，还有一步要对 Command 进行通道排序。</p> <p>通道，是一个枚举类型，保存在<code>Pass.js</code> 模块中。不同通道有不同的优先级，譬如在 1.6 中指定的通道是<code>Cesium.Pass.OPAQUE</code>，即不透明通道。在 1.93 版本，通道的顺序为枚举值：</p> <pre><code class="language-js">const Pass = {   ENVIRONMENT: 0,   COMPUTE: 1,   GLOBE: 2,   TERRAIN_CLASSIFICATION: 3,   CESIUM_3D_TILE: 4,   CESIUM_3D_TILE_CLASSIFICATION: 5,   CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW: 6,   OPAQUE: 7,   TRANSLUCENT: 8,   OVERLAY: 9,   NUMBER_OF_PASSES: 10, }</code></pre> <p>可见，<code>OPAQUE</code> （不透明通道）的优先级比<code>TRANSLUCENT</code>（透明通道）高。</p> <p>这个通道与其它图形 API 的通道可能略不一样，因为你只能使用这个值去指定顺序，而不是自己写一个通道来合成渲染（例如 ThreeJS 或 WebGPU）。</p> <h3 id="-绘制的图元类型---webgl-绘制常数">② 绘制的图元类型 - WebGL 绘制常数</h3> <p>即指定<code>VertexArray</code> 中顶点的拓扑格式，在 WebGL 中是通过<code>drawArrays</code> 指定的：</p> <pre><code class="language-js">gl.drawArrays(gl.TRIANGLES, 0, 3)</code></pre> <p>这个<code>gl.TRIANGLES</code> 就是图元类型，是一个常数。Cesium 全部封装在<code>PrimitiveType.js</code> 模块导出的枚举中了：</p> <pre><code class="language-js">console.log(PrimitiveType.TRIANGLES) // 4</code></pre> <p>默认就是<code>PrimitiveType.TRIANGLES</code>，所以在 1.6 代码中我们并不需要传递。</p> <h3 id="-离屏绘制容器---framebuffer">③ 离屏绘制容器 - Framebuffer</h3> <p>CesiumJS 支持把结果画到<code>Renderbuffer</code>，也就是<code>RTR(Render to RenderBuffer)</code> 离屏绘制。绘制到渲染缓冲，是需要帧缓冲容器的，CesiumJS 把 WebGL 1/2 中帧缓冲相关的 API 都封装好了（严格来说，把 WebGL 中的 API 基本都封装了一遍）。</p> <p>本文只简单提一提，关于帧缓冲离屏绘制，以后有机会再介绍，法克鸡丝的博客有比较系统的介绍（虽然比较旧，不过思路还是在的）。</p> <h3 id="-模型坐标变换矩阵---matrix4">④ 模型坐标变换矩阵 - Matrix4</h3> <p>将<code>Matrix4</code> 类型的变量在创建<code>DrawCommand</code> 时传递进去，它最终会传递到 CesiumJS 的内部统一值：<code>czm_model</code>（模型矩阵）上，而无需你在<code>uniform</code> 中指定，你可以在顶点着色器中使用它来对<code>VertexArray</code> 中的顶点进行模型矩阵变换。见 1.6 中的顶点着色器经典的 MVP 相乘。</p> <h3 id="-其它">⑤ 其它</h3> <ul> <li>cull/occlude: 视锥剔除 + 地平线剔除组合技，Boolean</li> <li>orientedBoundingBox/boundingVolume: 范围框</li> <li>count: number，WebGL 绘制时要画多少个点</li> <li>offset: number，WebGL 绘制时从多少偏移量开始用顶点数据</li> <li>instanceCount: number，实例绘制有关</li> <li>castShadows/receiveShadows: Boolean，阴影相关</li> <li>pickId: string，若没定义，在 Pick 通道的绘制中将使用深度数据；若定义了将在 GLSL 中转化为 pick id</li> <li>...</li> </ul> <p>这些都可以在<code>DrawCommand</code> 中找到对应的字段，按需设置即可。</p> <h2 id="16-我们来实践一发纯色三角形">1.6. 我们来实践一发纯色三角形</h2> <p>万事俱备，直接硬搓一个能产生三角形绘制指令的<code>StaticTrianglePrimitive</code>，为了便于在官方沙盒中使用，我给官方 API 加上了命名空间：</p> <pre><code class="language-js">const modelCenter = Cesium.Cartesian3.fromDegrees(112, 23, 0) const modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(modelCenter)  const vertexShaderText = `attribute vec3 position; void main() {   gl_Position = czm_projection * czm_view * czm_model * vec4(position, 1.0); }` const fragmentShaderText = `uniform vec3 u_color; void main(){   gl_FragColor = vec4(u_color, 1.0); }`  const createCommand = (frameState, matrix) =&gt; {   const attributeLocations = {     "position": 0,   }   const uniformMap = {     u_color() {       return Cesium.Color.HONEYDEW     },   }   const positionBuffer = Cesium.Buffer.createVertexBuffer({     usage: Cesium.BufferUsage.STATIC_DRAW,     typedArray: new Float32Array([       10000, 50000, 5000,       -20000, -10000, 5000,       50000, -30000, 5000,     ]),     context: frameState.context,   })   const vertexArray = new Cesium.VertexArray({     context: frameState.context,     attributes: [{       index: 0, // 等于 attributeLocations['position']       vertexBuffer: positionBuffer,       componentsPerAttribute: 3,       componentDatatype: Cesium.ComponentDatatype.FLOAT     }]   })   const program = Cesium.ShaderProgram.fromCache({     context: frameState.context,     vertexShaderSource: vertexShaderText,     fragmentShaderSource: fragmentShaderText,     attributeLocations: attributeLocations,   })   const renderState = Cesium.RenderState.fromCache({     depthTest: {       enabled: true     }   })   return new Cesium.DrawCommand({     modelMatrix: matrix,     vertexArray: vertexArray,     shaderProgram: program,     uniformMap: uniformMap,     renderState: renderState,     pass: Cesium.Pass.OPAQUE,   }) }  /* ----- See Here ↓ ------ */  class StaticTrianglePrimitive {   /**    * @param {Matrix4} modelMatrix matrix to WorldCoordinateSystem    */   constructor(modelMatrix) {     this._modelMatrix = modelMatrix   }      /**    * @param {FrameState} frameState    */   update(frameState) {     const command = createCommand(frameState, this._modelMatrix)     frameState.commandList.push(command)   } }  // try! const viewer = new Cesium.Viewer('cesiumContainer', {   contextOptions: {     requestWebgl2: true   } }) viewer.scene.globe.depthTestAgainstTerrain = true viewer.scene.primitives.add(new StaticTrianglePrimitive(modelMatrix))</code></pre> <p>显示出来的效果就是一个白绿色的三角形：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ea83db04793c5b8b60e9bfe117270d0f.jpg" alt="Cesium DrawCommand [1] 不谈地球 画个三角形"></p> <p>图中为大湾区，因为我设的 ENU 坐标中心就是大湾区附近。三角形的高度被我设为了 5000 米。</p> </h1> <p>如果有一个对象或者一个函数，返回的是可绘制的<code>DrawCommand</code>，那么只需把返回的指令对象传递给<code>FrameState</code> 就可以在这一帧把上面的数据和绘图逻辑展示出来。</p> <p>仔细想想，具备创建<code>DrawCommand</code> 的对象其实不少。有<code>Primitive</code>、<code>BillboardCollection</code>、<code>SkyAtmosphere</code>、<code>SkyBox</code>、<code>Sun</code>、<code>Model</code> 等（3DTiles 瓦片上的模型是通过<code>Model</code> 绘制的）。</p> <p>我这里就直接给结论了：</p> <ul> <li>具备创建<code>DrawCommand</code> 功能的，无论是函数，还是对象，都可以直接参与 Cesium 最底层的绘图；</li> <li>原型链上具备<code>update</code> 方法的类，且<code>update</code> 方法接受一个<code>FrameState</code> 对象，并在执行过程中向这个帧状态对象添加<code>DrawCommand</code> 的，就能添加至<code>scene.primitives</code> 这个<code>PrimitiveCollection</code> 中。</li> </ul> <p>前一种有具体的 API，即<code>Globe</code> 下的<code>GlobeSurfaceTileProvider</code>（由<code>QuadtreePrimitive</code> 使用）创建<code>DrawCommand</code>；后面的就多了。</p> <p>能精确控制<code>DrawCommand</code>，就可以在 Cesium 场景中做你想做的绘图。</p> <h2 id="点到为止">点到为止</h2> <p><code>DrawCommand</code> 是 CesiumJS 渲染器之前的最后一道数据封装，后面就是对这些指令对象上的资源进行分发、绑定、执行。读者有兴趣的话，还可以自行研究<code>ClearCommand</code> 和<code>ComputeCommand</code>，也许以后会写写，不过本篇点到为止~</p> </h1> <ul> <li>博客园 - 法克鸡丝 - Cesium原理篇：6 Render模块(5: VAO&amp;RenderState&amp;Command)</li> <li>知乎 - 三维网格 - Cesium 高性能扩展之DrawCommand（一）：入门</li> </ul> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104228.htm">宠物用品店代理（宠物用品店代理如何做）</a></p>
                                        <p>下一个：<a href="/news/article-104629.htm">小动物疫苗注射证明去哪里开具（动物疫苗证明怎么开）</a></p>
                                    </div>
                                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-3-clash-node-daily-updates.htm" title="3月3日22.8M/S|Shadowrocket/V2ray/Clash/SSR免费节点每天更新订阅链接，翻墙机场推荐分享">3月3日22.8M/S|Shadowrocket/V2ray/Clash/SSR免费节点每天更新订阅链接，翻墙机场推荐分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-29-free-clash.htm" title="3月29日20.5M/S|Clash/V2ray/Shadowrocket/SSR免费节点每天更新订阅链接，翻墙机场推荐分享">3月29日20.5M/S|Clash/V2ray/Shadowrocket/SSR免费节点每天更新订阅链接，翻墙机场推荐分享</a></li>
                        <li class="py-2"><a href="/news/article-93911.htm" title="mysql错误解决方案">mysql错误解决方案</a></li>
                        <li class="py-2"><a href="/news/article-70865.htm" title="做狗粮有市场吗 做狗粮有市场吗现在">做狗粮有市场吗 做狗粮有市场吗现在</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-19-free-clash-subscribe.htm" title="4月19日18.2M/S|Shadowrocket/Clash/SSR/V2ray免费节点每天更新订阅链接，翻墙机场推荐分享">4月19日18.2M/S|Shadowrocket/Clash/SSR/V2ray免费节点每天更新订阅链接，翻墙机场推荐分享</a></li>
                        <li class="py-2"><a href="/news/article-91790.htm" title="动物疫病抗体检测（动物疫病抗体检测方法）">动物疫病抗体检测（动物疫病抗体检测方法）</a></li>
                        <li class="py-2"><a href="/news/article-100746.htm" title="Kubernetes集群环境初始化_云其它_">Kubernetes集群环境初始化_云其它_</a></li>
                        <li class="py-2"><a href="/news/article-81672.htm" title="ubuntu 18及以上版本配置IP的方法，你get了吗_在线工具">ubuntu 18及以上版本配置IP的方法，你get了吗_在线工具</a></li>
                        <li class="py-2"><a href="/news/article-93296.htm" title="酒精消毒液哪个牌子好用(酒精消毒液哪个牌子好一点)">酒精消毒液哪个牌子好用(酒精消毒液哪个牌子好一点)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-24-free-high-speed-nodes.htm" title="3月24日20.9M/S|V2ray/Clash/SSR/Shadowrocket免费节点每天更新订阅链接，翻墙机场推荐分享">3月24日20.9M/S|V2ray/Clash/SSR/Shadowrocket免费节点每天更新订阅链接，翻墙机场推荐分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>


                        </div>
                    </div>
                </div>
            </div>
            <!-- /.END ABOUT -->

        </section>
        <!-- /.END MAIN CONTENT -->
                <!-- START FOOTER AREA -->
        <div class="bar-multi-color">
            <div class="container"></div>
        </div>
        <footer class="footer bg-black-light">
            <!-- COPYRIGHT AREA -->
            <div class="secondary-footer bg-black">
                <div class="copyright text-center">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
	                ShareV2rayNode节点分享站 版权所有
	                <br />
	                Powered by WordPress
                </div>
            </div>
        </footer>
        <!-- /.END FOOTER -->
        <!-- SCROLL TOP -->
        <div class='scrolltop'>
            <div class='scroll icon'><i class="fa fa-angle-up"></i></div>
        </div>
        <!-- JQUERY -->
        <script src="/assets/website/js/frontend/sharev2raynode/jquery-1.11.3.min.js"></script>
        <!-- EASING -->
        <script src="/assets/website/js/frontend/sharev2raynode/jquery.easing.min.js"></script>
        <!-- BOOTSTRAP -->
        <script src="/assets/website/js/frontend/sharev2raynode/bootstrap.min.js"></script>
        <!-- NAV JS -->
        <script src="/assets/website/js/frontend/sharev2raynode/jquery.nav.js"></script>
        <!-- MIXITUP -->
        <script src="/assets/website/js/frontend/sharev2raynode/jquery.mixitup.min.js"></script>
        <!-- MAGNIFIC JS -->
        <script src="/assets/website/js/frontend/sharev2raynode/magnific/jquery.magnific-popup.min.js"></script>
        <!-- OWL CAROUSEL -->
        <script src="/assets/website/js/frontend/sharev2raynode/owl.carousel.js"></script>
        <!-- COUNER-UP JS -->
        <script src="/assets/website/js/frontend/sharev2raynode/waypoint.js"></script>
        <script src="/assets/website/js/frontend/sharev2raynode/waypoints.min.js"></script>
        <script src="/assets/website/js/frontend/sharev2raynode/counter-up/jquery.counterup.min.js"></script>
        <!-- REVOLUTION JS FILES -->
        <script src="/assets/website/js/frontend/sharev2raynode/revolution/jquery.themepunch.tools.min.js"></script>
        <script src="/assets/website/js/frontend/sharev2raynode/revolution/jquery.themepunch.revolution.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.slideanims.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.layeranimation.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.navigation.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.video.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.actions.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.kenburn.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.migration.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.parallax.min.js"></script>
        <script type="text/javascript" src="/assets/website/js/frontend/sharev2raynode/revolution/extensions/revolution.extension.carousel.min.js"></script>
        <!-- CUSTOM JS -->
        <script src="/assets/website/js/frontend/sharev2raynode/custom.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!-- *** END *** -->
</body>

</html>